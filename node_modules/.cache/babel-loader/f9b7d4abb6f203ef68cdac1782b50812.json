{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smunk\\\\Desktop\\\\my-first-react-app\\\\src\\\\containers\\\\Contacts.js\";\nimport React from 'react'; //import './components/node_modules/bootstrap/dist/css/bootstrap.css';\n\nimport CardList from './../components/CardList';\nimport { contacts } from './../components/contacts';\nimport SearchBox from './../components/SearchBox';\nimport Scroll from './../components/Scroll';\n\nclass Contacts extends React.Component {\n  constructor(props) {\n    super(); // this.handleClick = this.handleClick.bind(this);\n\n    this.onSearchChange = event => {\n      this.setState({\n        'searchfield': event.target.value\n      });\n    };\n\n    this.state = {\n      contacts: [],\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      contacts: users\n    }));\n  } // handleClick() {\n  //   alert('Click happened');\n  // }\n\n\n  render() {\n    const filteredContacts = this.state.contacts.filter(contacts => {\n      return contacts.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n\n    if (this.state.contacts.length === 0) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"text-primary tc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, \"Friends\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SearchBox, {\n        searchChange: this.onSearchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-wrap bg-light-gray\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Scroll, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardList, {\n        contacts: filteredContacts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success\",\n        id: \"to-do-refresh\",\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      }, \"Refresh List\")));\n    }\n  }\n\n}\n\nexport default Contacts;","map":{"version":3,"sources":["C:/Users/smunk/Desktop/my-first-react-app/src/containers/Contacts.js"],"names":["React","CardList","contacts","SearchBox","Scroll","Contacts","Component","constructor","props","onSearchChange","event","setState","target","value","state","searchfield","componentDidMount","fetch","then","response","json","users","render","filteredContacts","filter","name","toLowerCase","includes","length","handleClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YADiB,CAEjB;;AAFiB,SAmBnBC,cAnBmB,GAmBDC,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AAAC,uBAAeD,KAAK,CAACE,MAAN,CAAaC;AAA7B,OAAd;AACD,KArBkB;;AAGjB,SAAKC,KAAL,GAAa;AACXZ,MAAAA,QAAQ,EAAE,EADC;AAEXa,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADjB,EAECF,IAFD,CAEOG,KAAK,IAAI,KAAKV,QAAL,CAAc;AAAET,MAAAA,QAAQ,EAAEmB;AAAZ,KAAd,CAFhB;AAGD,GAdoC,CAgBrC;AACA;AACA;;;AAOAC,EAAAA,MAAM,GAAG;AACP,UAAMC,gBAAgB,GAAG,KAAKT,KAAL,CAAWZ,QAAX,CAAoBsB,MAApB,CAA2BtB,QAAQ,IAAI;AAC9D,aAAOA,QAAQ,CAACuB,IAAT,CAAcC,WAAd,GAA4BC,QAA5B,CAAqC,KAAKb,KAAL,CAAWC,WAAX,CAAuBW,WAAvB,EAArC,CAAP;AACD,KAFwB,CAAzB;;AAGA,QAAI,KAAKZ,KAAL,CAAWZ,QAAX,CAAoB0B,MAApB,KAA+B,CAAnC,EAAsC;AACpC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFD,MAGK;AACH,0BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKnB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,eAME;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEc,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CANF,eAWE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAkD,QAAA,EAAE,EAAC,eAArD;AAAqE,QAAA,OAAO,EAAE,KAAKM,WAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAXF,CADJ;AAiBD;AACF;;AAnDoC;;AAsDvC,eAAexB,QAAf","sourcesContent":["import React from 'react';\r\n//import './components/node_modules/bootstrap/dist/css/bootstrap.css';\r\nimport CardList from './../components/CardList';\r\nimport { contacts } from './../components/contacts';\r\nimport SearchBox from './../components/SearchBox';\r\nimport Scroll from './../components/Scroll';\r\n\r\nclass Contacts extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    // this.handleClick = this.handleClick.bind(this);\r\n    this.state = {\r\n      contacts: [],\r\n      searchfield: ''\r\n    }    \r\n  }\r\n  \r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response=> response.json())\r\n    .then( users => this.setState({ contacts: users }))\r\n  }\r\n\r\n  // handleClick() {\r\n  //   alert('Click happened');\r\n  // }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({'searchfield': event.target.value})\r\n  }\r\n\r\n  \r\n  render() {\r\n    const filteredContacts = this.state.contacts.filter(contacts => {\r\n      return contacts.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n    })\r\n    if (this.state.contacts.length === 0) {\r\n      return <h1>Loading...</h1>\r\n    }\r\n    else {\r\n      return (\r\n          <div className=\"container\">\r\n            <h1 className=\"text-primary tc\">Friends</h1>\r\n            <div className=\"tc\">\r\n              <SearchBox searchChange={this.onSearchChange}/>\r\n              {/* <button type=\"button\" className=\"ph2 pv1 mh3 btn btn-success\" id=\"to-do-submit\">Search</button> */}\r\n            </div>\r\n            <div className=\"flex flex-wrap bg-light-gray\">\r\n              <Scroll>\r\n                <CardList contacts={filteredContacts}/>\r\n              </Scroll>\r\n            </div>\r\n            <div className=\"container-fluid\">\r\n              <button type=\"button\" className=\"btn btn-success\" id=\"to-do-refresh\" onClick={this.handleClick}>Refresh List</button>\r\n            </div>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Contacts;"]},"metadata":{},"sourceType":"module"}